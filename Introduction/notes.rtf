{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Encapsulation and abstraction help us by hiding details of code and protecting consistency of data. However, these also create dependencies.\
\
Dependencies can become out of control, where changing one node becomes difficult as it can affect the entire system. 
\f1\b Layered architecture
\f0\b0  is one way of tackling this problem. In a layered architecture, we can divide code into categories	.\
\

\f1\b Three-layered architecture
\f0\b0  is most common.\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	1.	}User Interface\
{\listtext	2.	}Business Logic\
{\listtext	3.	}Database\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f2\i Business logic should not depend on technical details.
\f0\i0  High level modules should be easy to change in response to business needs, though low level modules (details) are in practice harder to change. Adding an abstraction between the high level and low level *details* allow us to more easily make changes.\
\
\ul The most common reason that designs fail:\ulnone  Business logic spreads throughout layers of application, making them hard to identify, understand, and change.\
}